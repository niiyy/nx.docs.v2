[
  {
    "name": "client",
    "_path": "apps/rc/client/modules",
    "items": [
      {
        "name": "events",
        "items": [
          {
            "name": "EmitServerEvent",
            "service": "Events",
            "file": "apps/rc/client/modules/events/events.service.ts",
            "params": [
              {
                "name": "eventName",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The event name to trigger"
              },
              {
                "name": "callback",
                "type": "(...args: unknown[]) => void",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The callback that well be executed when the server responds"
              },
              {
                "name": "args",
                "type": "unknown[]",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "Array that contains all the args to pass to the server event"
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Client",
            "uuid": "9ca08772-38cc-4233-bc5d-15525d390c2a",
            "type": "method",
            "line": 20,
            "description": "This will emit a server event previously declared with OnServerEvent",
            "examples": [
              "EmitServerEvent('NX::sayHelloWorld', ( ) => console.log('Server responds'), ['ARG1'])"
            ]
          }
        ],
        "uuid": "1fb35e11-b527-499f-97e9-8a4e9897e3d0",
        "type": "service"
      },
      {
        "name": "input",
        "items": [
          {
            "name": "IsActive",
            "service": "Input",
            "file": "apps/rc/client/modules/input/input.service.ts",
            "params": [],
            "return": {
              "type": "boolean",
              "comment": "true or false"
            },
            "category": "Client",
            "uuid": "0640c42a-fc14-49c9-b387-e90b6d319597",
            "type": "method",
            "line": 36,
            "description": "This will return true if the input is active otherwise false",
            "examples": []
          },
          {
            "name": "Destroy",
            "service": "Input",
            "file": "apps/rc/client/modules/input/input.service.ts",
            "params": [
              {
                "name": "cb",
                "type": "ResponseCB",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": true,
                "comment": "The callback that well be execuetd when the form is submited"
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Client",
            "uuid": "db5b6d87-ec46-43c9-8f71-ad9403f2a3d8",
            "type": "method",
            "line": 49,
            "description": "This will destroy the current form",
            "examples": []
          },
          {
            "name": "Create",
            "service": "Input",
            "file": "apps/rc/client/modules/input/input.service.ts",
            "params": [
              {
                "name": "data",
                "type": "InputsData",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The data of the form"
              },
              {
                "name": "handler",
                "type": "() => void",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "A callback function that will be executed with the data when the form is submited"
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Client",
            "uuid": "90db46b0-dfa2-4ec9-bde5-b162cf902569",
            "type": "method",
            "line": 76,
            "description": "This will create a form",
            "examples": []
          }
        ],
        "uuid": "640c6493-bfab-472a-ba3e-041613612db1",
        "type": "service"
      },
      {
        "name": "loadingbar",
        "items": [
          {
            "name": "IsActive",
            "service": "LoadingBar",
            "file": "apps/rc/client/modules/loading-bar/loadingBar.service.ts",
            "params": [],
            "return": {
              "type": "boolean",
              "comment": "true or false"
            },
            "category": "Client",
            "uuid": "2a73f2d2-0154-4c42-ba03-73918112b807",
            "type": "method",
            "line": 26,
            "description": "This will return a boolean true if the loading bar is active otherwise false",
            "examples": [
              "IsActive()"
            ]
          },
          {
            "name": "Create",
            "service": "LoadingBar",
            "file": "apps/rc/client/modules/loading-bar/loadingBar.service.ts",
            "params": [
              {
                "name": "loadingbar",
                "type": "CreationLoadingbarType",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The loadingbar data"
              }
            ],
            "return": {
              "type": "Promise<void>",
              "comment": ""
            },
            "category": "Client",
            "uuid": "24d64bdb-6944-4369-b85b-e3d4546d2151",
            "type": "method",
            "line": 47,
            "description": "This will create a loading bar",
            "examples": [
              "Create({\n duration: 5 // in seconds,\n label: 'Hello world'\n})"
            ]
          }
        ],
        "uuid": "c1e2cf43-e865-4d34-a085-a9c3ae2e76d3",
        "type": "service"
      },
      {
        "name": "menu",
        "items": [
          {
            "name": "Create",
            "service": "Menu",
            "file": "apps/rc/client/modules/menu/menu.service.ts",
            "params": [
              {
                "name": "menu",
                "type": "Menu",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The menu informations"
              }
            ],
            "return": {
              "type": "{\n    ShowMenu: () => void\n    HideMenu: () => void\n  }",
              "comment": "2 methods ShowMenu and HideMenu"
            },
            "category": "Client",
            "uuid": "6c9917b2-b22d-465c-8ea5-7f9b7146eea4",
            "type": "method",
            "line": 289,
            "description": "This will create a menu",
            "examples": [
              "Create({\n options: {\n   width: 500,\n   banner: 'IMG LINK'\n }\n items: [\n   {\n     type: 'BUTTON',\n     label: 'Click me',\n     onClick: ( ) => console.log('Button clicked')\n   },\n   {\n     type: 'CHECKBOX',\n     label: 'Hello im a checkbox',\n     onChange: ( ) => console.log('Checkbox changed')\n   }\n ]\n})"
            ]
          }
        ],
        "uuid": "bc770503-674b-4870-9392-626ce4620640",
        "type": "service"
      },
      {
        "name": "player",
        "items": [],
        "uuid": "fb12cfa2-4c34-418d-87e7-e2febdd5547a",
        "type": "service"
      },
      {
        "name": "timeline",
        "items": [
          {
            "name": "Create",
            "service": "Timeline",
            "file": "apps/rc/client/modules/timeline/timeline.service.ts",
            "params": [
              {
                "name": "timeline",
                "type": "CreateTimelineType",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The timeline parametrs"
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Client",
            "uuid": "b23635ee-e934-4035-a10c-c5725440f418",
            "type": "method",
            "line": 112,
            "description": "This will create a timeline",
            "examples": [
              "Create({\n rows: [\n   {\n     id: '1',\n     type: 'DOT',\n     label: 'Kill a player'\n   }\n ]\n})"
            ]
          },
          {
            "name": "Update",
            "service": "Timeline",
            "file": "apps/rc/client/modules/timeline/timeline.service.ts",
            "params": [
              {
                "name": "data",
                "type": "UpdateTimelineType",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The data to update"
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Client",
            "uuid": "c8583829-58bf-4588-87b6-76d13ef14c3a",
            "type": "method",
            "line": 152,
            "description": "This will update the current timeline",
            "examples": [
              "Update({\n id: '1',\n type: 'SET_COMPLETED'\n})"
            ]
          },
          {
            "name": "Destroy",
            "service": "Timeline",
            "file": "apps/rc/client/modules/timeline/timeline.service.ts",
            "params": [],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Client",
            "uuid": "35a523a2-eaff-4397-808e-5f1ed2ffb578",
            "type": "method",
            "line": 177,
            "description": "This will destroy the current active timeline",
            "examples": [
              "Destroy()"
            ]
          },
          {
            "name": "IsActive",
            "service": "Timeline",
            "file": "apps/rc/client/modules/timeline/timeline.service.ts",
            "params": [],
            "return": {
              "type": "boolean",
              "comment": "true or false"
            },
            "category": "Client",
            "uuid": "0bfaf1af-2061-44bb-9829-4f7d1badcae6",
            "type": "method",
            "line": 202,
            "description": "Check if a timeline is active",
            "examples": [
              "IsActive()"
            ]
          }
        ],
        "uuid": "d302f594-7c2c-4968-be16-e6d79f587922",
        "type": "service"
      }
    ]
  },
  {
    "name": "server",
    "_path": "apps/rc/server/modules",
    "items": [
      {
        "name": "boot",
        "items": [],
        "uuid": "73dceaf4-fe11-4962-9209-0cc4fb6080a9",
        "type": "service"
      },
      {
        "name": "commands",
        "items": [
          {
            "name": "AddCommand",
            "service": "Commands",
            "file": "apps/rc/server/modules/commands/commands.service.ts",
            "params": [
              {
                "name": "name",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The command name."
              },
              {
                "name": "cb",
                "type": "(source: number, args: unknown[]) => void",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The callback to execute when the command is executed."
              },
              {
                "name": "authFlags",
                "type": "PermissionsFlags[]",
                "hasDefaultValue": true,
                "defaultValue": "[]",
                "isOptional": false,
                "comment": "The permissions flags to have to execute the command."
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Server",
            "uuid": "fbf2a817-0121-4b03-9fac-f61c896fac6f",
            "type": "method",
            "line": 16,
            "description": "Register a command",
            "examples": [
              "AddCommand('ping', (_src) => console.log(`pong from: ${_src}`), ['PLAYER_TALK'])"
            ]
          }
        ],
        "uuid": "9c587d75-6b77-4776-acf4-682425710616",
        "type": "service"
      },
      {
        "name": "events",
        "items": [
          {
            "name": "OnServerEvent",
            "service": "Events",
            "file": "apps/rc/server/modules/events/events.service.ts",
            "params": [
              {
                "name": "eventName",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The event to register."
              },
              {
                "name": "callback",
                "type": "() => void",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The callback to execute when the event is called."
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Server",
            "uuid": "4c7c6a4a-1bdd-4e95-970d-4b7250df4be6",
            "type": "method",
            "line": 21,
            "description": "Register an event",
            "examples": [
              "OnServerEvent('NX::sayHelloWorld', () => console.log('sayHelloWorld'))"
            ]
          }
        ],
        "uuid": "4e4cb1a2-8204-4521-9ba0-ee453a0a4814",
        "type": "service"
      },
      {
        "name": "items",
        "items": [
          {
            "name": "RegisterUsableItem",
            "service": "Items",
            "file": "apps/rc/server/modules/items/items.service.ts",
            "params": [
              {
                "name": "name",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The name of the item to register."
              },
              {
                "name": "cb",
                "type": "() => void",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The callback to execute when the item is used."
              }
            ],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Server",
            "uuid": "541e58d2-dd3a-4d70-8fe1-7ab05d174c8d",
            "type": "method",
            "line": 192,
            "description": "Register an item as usable",
            "examples": [
              "RegisterUsableItem('phone', () => console.log('Item used'))"
            ]
          }
        ],
        "uuid": "ab7cebfa-57c9-405b-96ca-7dfe70bcded9",
        "type": "service"
      },
      {
        "name": "player",
        "items": [
          {
            "name": "SaveAll",
            "service": "Player",
            "file": "apps/rc/server/modules/player/player.service.ts",
            "params": [],
            "return": {
              "type": "void",
              "comment": ""
            },
            "category": "Server",
            "uuid": "8a379363-a8f8-410d-bf0a-101399ebde81",
            "type": "method",
            "line": 78,
            "description": "Save all connected players to the database.",
            "examples": [
              "SaveAll()"
            ]
          },
          {
            "name": "GetAll",
            "service": "Player",
            "file": "apps/rc/server/modules/player/player.service.ts",
            "params": [],
            "return": {
              "type": "Promise<number[] | []>",
              "comment": ""
            },
            "category": "Server",
            "uuid": "4ca8abc9-3f68-4be7-88d1-d825d316c1e6",
            "type": "method",
            "line": 193,
            "description": "Get connected players sources",
            "examples": [
              "const NXPlayers = GetAll()\nconsole.log(NXPlayers.length)"
            ]
          },
          {
            "name": "Get",
            "service": "Player",
            "file": "apps/rc/server/modules/player/player.service.ts",
            "params": [
              {
                "name": "source",
                "type": "number",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": ""
              }
            ],
            "return": {
              "type": "Promise<NXPlayerMethodsCapitalized | false>",
              "comment": ""
            },
            "category": "Server",
            "uuid": "aaae6550-e929-45c4-a9b5-daa874703d94",
            "type": "method",
            "line": 214,
            "description": "Get connected player",
            "examples": [
              "const NXPlayer = Get(1)\nconsole.log(NXPlayer.GetName())"
            ]
          },
          {
            "name": "GetAllData",
            "service": "Player",
            "file": "apps/rc/server/modules/player/player.service.ts",
            "params": [],
            "return": {
              "type": "Promise<NXPlayer[] | []>",
              "comment": ""
            },
            "category": "Server",
            "uuid": "b997d734-facd-497b-8d39-bd48be00145b",
            "type": "method",
            "line": 231,
            "description": "Get all connected players",
            "examples": [
              "const NXPlayers = GetAllData()\nconsole.log(NXPlayers.length)"
            ]
          },
          {
            "name": "GetData",
            "service": "Player",
            "file": "apps/rc/server/modules/player/player.service.ts",
            "params": [
              {
                "name": "source",
                "type": "number",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": ""
              }
            ],
            "return": {
              "type": "Promise<NXPlayer | false>",
              "comment": ""
            },
            "category": "Server",
            "uuid": "3fb30eb4-7d5f-4cf4-bdcc-957467d4bcc5",
            "type": "method",
            "line": 252,
            "description": "Get player data",
            "examples": [
              "const NXPlayer = GetData(1)\nconsole.log(NXPlayer.charinfo.lastname)"
            ]
          }
        ],
        "uuid": "44d70b37-f201-4912-8610-b17d6940277f",
        "type": "service"
      },
      {
        "name": "permissions",
        "items": [
          {
            "name": "DoesGroupHasFlag",
            "service": "Permissions",
            "file": "apps/rc/server/modules/services/permissions.service.ts",
            "params": [
              {
                "name": "group",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The name of the group to check."
              },
              {
                "name": "flag",
                "type": "keyof typeof PermissionsFlags",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The permission flag to check."
              }
            ],
            "return": {
              "type": "void",
              "comment": "True if the group has the specified permission flag, false otherwise."
            },
            "category": "Server",
            "uuid": "47d104b2-f8dc-4488-b66b-02f72774836b",
            "type": "method",
            "line": 25,
            "description": "Checks if a group has the specified permission flag.",
            "examples": [
              "DoesGroupHasFlag('owner', 'PLAYER_BAN')"
            ]
          },
          {
            "name": "DoesGroupHasAllFlags",
            "service": "Permissions",
            "file": "apps/rc/server/modules/services/permissions.service.ts",
            "params": [
              {
                "name": "group",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The name of the group to check."
              },
              {
                "name": "flags",
                "type": "Array<keyof typeof PermissionsFlags>",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The permission flags to check."
              }
            ],
            "return": {
              "type": "boolean",
              "comment": "True if the group has all the specified permission flags, false otherwise."
            },
            "category": "Server",
            "uuid": "7a7bd573-ff12-41f7-a3e7-a4b7f668d91c",
            "type": "method",
            "line": 48,
            "description": "Checks if a group has all the specified permission flags.",
            "examples": [
              "DoesGroupHasAllFlags('owner', ['PLAYER_BAN', 'VEHICLE_CREATE'])"
            ]
          },
          {
            "name": "HasMorePower",
            "service": "Permissions",
            "file": "apps/rc/server/modules/services/permissions.service.ts",
            "params": [
              {
                "name": "srcGroup",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The group to check if he has more permissions"
              },
              {
                "name": "targetGroup",
                "type": "string",
                "hasDefaultValue": false,
                "defaultValue": "-",
                "isOptional": false,
                "comment": "The second group"
              }
            ],
            "return": {
              "type": "boolean",
              "comment": "a boolean value"
            },
            "category": "Server",
            "uuid": "f7fbe05f-2905-4172-9959-d333b56374b3",
            "type": "method",
            "line": 90,
            "description": "Check if a group has more permissions then another",
            "examples": [
              "// returns true\nhasMorePower('owner', 'admin');"
            ]
          }
        ],
        "uuid": "8815ed02-ccb1-460f-a3eb-0d6ae03dffc7",
        "type": "service"
      }
    ]
  },
  {
    "name": "nxPlayer",
    "items": [
      {
        "name": "GetWeight",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "number",
          "comment": ""
        },
        "uuid": "9b41e427-d0b5-483a-8560-0ce458065cea",
        "type": "p_method",
        "line": 63,
        "description": "",
        "examples": []
      },
      {
        "name": "GetSkin",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "Record<string, any>",
          "comment": ""
        },
        "uuid": "cc650056-e413-4719-87f7-3ff5719c484c",
        "type": "p_method",
        "line": 67,
        "description": "",
        "examples": []
      },
      {
        "name": "GetName",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "string",
          "comment": ""
        },
        "uuid": "a39fecd7-af3d-4fba-820e-88287805aa98",
        "type": "p_method",
        "line": 71,
        "description": "",
        "examples": []
      },
      {
        "name": "GetCharInfo",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "NXPlayerCharInfo",
          "comment": ""
        },
        "uuid": "59391d37-0c67-478c-b54c-e667dc8a2fe3",
        "type": "p_method",
        "line": 75,
        "description": "",
        "examples": []
      },
      {
        "name": "GetIdentifier",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "string",
          "comment": ""
        },
        "uuid": "508ef50a-6a17-458f-8902-b12b96e9dbb1",
        "type": "p_method",
        "line": 79,
        "description": "",
        "examples": []
      },
      {
        "name": "GetCoords",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "Position",
          "comment": ""
        },
        "uuid": "83d51037-999e-43bd-b48a-fa5caf255847",
        "type": "p_method",
        "line": 83,
        "description": "",
        "examples": []
      },
      {
        "name": "GetInventory",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "Record<string, InventoryItem>",
          "comment": ""
        },
        "uuid": "406bc708-723e-4280-8901-c2f9c8ab102a",
        "type": "p_method",
        "line": 87,
        "description": "",
        "examples": []
      },
      {
        "name": "GetAccounts",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "Record<string, number>",
          "comment": ""
        },
        "uuid": "ddd3a2cb-85e9-43f6-9d61-809a61f09308",
        "type": "p_method",
        "line": 91,
        "description": "",
        "examples": []
      },
      {
        "name": "GetGroup",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "string",
          "comment": ""
        },
        "uuid": "2817d16c-61dd-4452-b0ea-8c1254b80e1d",
        "type": "p_method",
        "line": 95,
        "description": "",
        "examples": []
      },
      {
        "name": "GetBloodType",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "BloodTypes",
          "comment": ""
        },
        "uuid": "198356d8-5cec-4ae0-9f45-1fdc91087557",
        "type": "p_method",
        "line": 99,
        "description": "",
        "examples": []
      },
      {
        "name": "GetThirst",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "number",
          "comment": ""
        },
        "uuid": "e6926774-3dd4-410e-a53e-82cad8ff345d",
        "type": "p_method",
        "line": 103,
        "description": "",
        "examples": []
      },
      {
        "name": "GetHunger",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "number",
          "comment": ""
        },
        "uuid": "848140b2-2e35-4c4a-a34a-150de7b756e4",
        "type": "p_method",
        "line": 107,
        "description": "",
        "examples": []
      },
      {
        "name": "GetMaxWeight",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "number",
          "comment": ""
        },
        "uuid": "302e695b-37a6-4534-9e4c-c80967c0c23d",
        "type": "p_method",
        "line": 111,
        "description": "",
        "examples": []
      },
      {
        "name": "GetUID",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "string",
          "comment": ""
        },
        "uuid": "4645fb1f-bdf2-4121-817e-3b7eab3a10d9",
        "type": "p_method",
        "line": 115,
        "description": "",
        "examples": []
      },
      {
        "name": "GetAccountMoney",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "account",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "number | undefined",
          "comment": ""
        },
        "uuid": "6a5e77e4-bd6e-4fd8-9808-310e6cf7ead9",
        "type": "p_method",
        "line": 119,
        "description": "",
        "examples": []
      },
      {
        "name": "GetJob",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "type",
            "type": "number | ''",
            "hasDefaultValue": true,
            "defaultValue": "1",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "{\n    label: string\n    name: string\n    grade: any\n  }",
          "comment": ""
        },
        "uuid": "2779f12b-6d36-4e49-8027-50c472590dd0",
        "type": "p_method",
        "line": 125,
        "description": "",
        "examples": []
      },
      {
        "name": "GetJobs",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "91b7567e-118f-4205-9673-ab7f5d411f48",
        "type": "p_method",
        "line": 148,
        "description": "",
        "examples": []
      },
      {
        "name": "SetThirst",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "value",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "3335c30e-7cf0-42ee-84a2-81b854cbb7e3",
        "type": "p_method",
        "line": 153,
        "description": "",
        "examples": []
      },
      {
        "name": "SetSkin",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "skin",
            "type": "Record<string, string>",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "514fea47-3f2c-428f-a39a-ec7be128ad7c",
        "type": "p_method",
        "line": 157,
        "description": "",
        "examples": []
      },
      {
        "name": "SetHunger",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "value",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "8f18863b-abaa-4c35-a8c8-e1b64f3273c7",
        "type": "p_method",
        "line": 163,
        "description": "",
        "examples": []
      },
      {
        "name": "SetGroup",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "permission",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "0e31f1d6-b698-47a3-8b18-674d0b257289",
        "type": "p_method",
        "line": 167,
        "description": "",
        "examples": []
      },
      {
        "name": "SetAccountMoney",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "account",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "money",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "36849a33-4206-4e84-857e-8226720d9a62",
        "type": "p_method",
        "line": 176,
        "description": "",
        "examples": []
      },
      {
        "name": "SetJob",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "name",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "grade",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "type",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "cb",
            "type": "(res: JobCB) => void",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": true,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "47a19b9f-5c6c-41d7-acca-f70055ea4644",
        "type": "p_method",
        "line": 189,
        "description": "",
        "examples": []
      },
      {
        "name": "SetCoords",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "x",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "y",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "z",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "heading",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "a073d905-26b1-4636-9b34-01f25589602f",
        "type": "p_method",
        "line": 233,
        "description": "",
        "examples": []
      },
      {
        "name": "SetCharInfoKey",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "key",
            "type": "string | string[]",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "value",
            "type": "string | string[]",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "63a891be-0086-40a2-9a28-5ae2ab0e56bd",
        "type": "p_method",
        "line": 244,
        "description": "",
        "examples": []
      },
      {
        "name": "EmitEvent",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "name",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "args",
            "type": "unknown[]",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "ccf52c07-8821-4b33-ae55-df80b53236ad",
        "type": "p_method",
        "line": 259,
        "description": "",
        "examples": []
      },
      {
        "name": "HasItem",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "name",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "7343eefe-74bd-4065-a603-62d4df72bae0",
        "type": "p_method",
        "line": 263,
        "description": "",
        "examples": []
      },
      {
        "name": "RemoveItem",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "name",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "amount",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "cb",
            "type": "ResponseCB",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": true,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "2d634c41-f9c1-4065-8b7a-501bd5cdac35",
        "type": "p_method",
        "line": 271,
        "description": "",
        "examples": []
      },
      {
        "name": "CanTakeItem",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "name",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "amount",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "bd9fd329-08cc-4cf8-bd69-31dc50f8522f",
        "type": "p_method",
        "line": 319,
        "description": "",
        "examples": []
      },
      {
        "name": "AddItem",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "name",
            "type": "string",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "amount",
            "type": "number",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": false,
            "comment": ""
          },
          {
            "name": "cb",
            "type": "ResponseCB",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": true,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "79411dff-83f7-4b53-81b3-bec3469f649f",
        "type": "p_method",
        "line": 330,
        "description": "",
        "examples": []
      },
      {
        "name": "Save",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "cb",
            "type": "ResponseCB",
            "hasDefaultValue": false,
            "defaultValue": "-",
            "isOptional": true,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "a86898a1-6637-4a19-965b-3b624934967e",
        "type": "p_method",
        "line": 388,
        "description": "",
        "examples": []
      },
      {
        "name": "Kick",
        "file": "apps/rc/server/modules/player/player.class.ts",
        "params": [
          {
            "name": "reason",
            "type": "unknown",
            "hasDefaultValue": true,
            "defaultValue": "'no reason'",
            "isOptional": false,
            "comment": ""
          }
        ],
        "return": {
          "type": "void",
          "comment": ""
        },
        "uuid": "82a9ada5-fa39-4457-942d-e2e275f57971",
        "type": "p_method",
        "line": 413,
        "description": "",
        "examples": []
      }
    ],
    "uuid": "0d75fe45-0bd5-42be-b8a0-8b564b4a1e42"
  }
]